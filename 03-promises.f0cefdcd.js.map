{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EAnCA,CACXO,YAAaC,SAASC,cAAc,WAuBjCF,YAAYG,iBAAiB,UApBbC,IACnBA,EAAMC,iBACN,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,SAC9CC,EAAaC,OAAON,EAAMO,OAC1BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOJ,EAAOK,OAElC,IAAK,IAAIG,EAAI,EAAGC,EAAIN,EAAYK,GAAKD,EAAaC,GAAK,EAAGC,GAAKH,EAC7DvB,EAAcyB,EAAGC,GACdC,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,KACjB0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqB7B,QAAiBC,SACrC6B,OAEJ,EAAO9B,WAAUC,WAChB0B,EAAA9B,GAAQ+B,OAACG,QAAO,sBAAS/B,QAA8BC,QAAY","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formElement: document.querySelector('.form'),\n};\n\nconst onFormSubmit = event => {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget.elements;\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let i = 1, j = delayValue; i <= amountValue; i += 1, j += stepValue) {\n    createPromise(i, j)\n      .then(({ position, delay }) =>\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        )\n      )\n      .catch(({ position, delay }) =>\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n  }\n};\n\nrefs.formElement.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","formElement","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","elements","delayValue","Number","value","stepValue","amountValue","i","j","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.f0cefdcd.js.map"}